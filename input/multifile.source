SET datestyle = 'ISO';
SET client_min_messages = WARNING;
SET log_statement TO 'none';
CREATE EXTENSION parquet_fdw;
DROP ROLE IF EXISTS regress_parquet_fdw;
CREATE ROLE regress_parquet_fdw LOGIN SUPERUSER;

SET ROLE regress_parquet_fdw;
CREATE SERVER parquet_srv FOREIGN DATA WRAPPER parquet_fdw;
CREATE USER MAPPING FOR regress_parquet_fdw SERVER parquet_srv;

SET ROLE regress_parquet_fdw;

-- sequential multifile reader
CREATE FOREIGN TABLE example_seq (
    one     INT8,
    two     INT8,
    three   TEXT,
    four    TIMESTAMP,
    five    DATE,
    six     BOOL,
    seven   FLOAT8)
SERVER parquet_srv
OPTIONS (filename '@abs_srcdir@/data/example1.parquet @abs_srcdir@/data/example2.parquet');
EXPLAIN (COSTS OFF) SELECT * FROM example_seq;
SELECT * FROM example_seq;

-- multifile merge reader
CREATE FOREIGN TABLE example_sorted (
    one     INT8,
    two     INT8,
    three   TEXT,
    four    TIMESTAMP,
    five    DATE,
    six     BOOL,
    seven   FLOAT8)
SERVER parquet_srv
OPTIONS (filename '@abs_srcdir@/data/example1.parquet @abs_srcdir@/data/example2.parquet', sorted 'one');
EXPLAIN (COSTS OFF) SELECT * FROM example_sorted ORDER BY one, three;
SELECT * FROM example_sorted ORDER BY one, three;

-- parallel execution
SET parallel_setup_cost = 0;
SET parallel_tuple_cost = 0.001;
SET cpu_operator_cost = 0.000025;
SET max_parallel_workers_per_gather = 2;
ANALYZE example_seq;
ANALYZE example_sorted;
EXPLAIN (COSTS OFF) SELECT * FROM example_seq;
EXPLAIN (COSTS OFF) SELECT * FROM example_seq ORDER BY one;
EXPLAIN (COSTS OFF) SELECT * FROM example_seq ORDER BY two;
EXPLAIN (COSTS OFF) SELECT * FROM example_sorted;
EXPLAIN (COSTS OFF) SELECT * FROM example_sorted ORDER BY one;
EXPLAIN (COSTS OFF) SELECT * FROM example_sorted ORDER BY two;
DROP EXTENSION parquet_fdw CASCADE;
